========================
checksec --file=./labyrinth --output=json
========================
{
    "./labyrinth": {
        "relro": "full",
        "canary": "no",
        "nx": "yes",
        "pie": "no",
        "rpath": "no",
        "runpath": "yes",
        "symbols": "yes",
        "fortify_source": "no",
        "fortified": "0",
        "fortify-able": "4"
    }
}========================
ROPgadget --binary ./labyrinth
========================
Gadgets information
============================================================
0x0000000000401198 : adc byte ptr [rax + 0x40], al ; add bh, bh ; loopne 0x401205 ; nop ; ret
0x0000000000401137 : adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x401020
0x0000000000401072 : adc ch, byte ptr [rdi] ; add byte ptr [rax], al ; push 4 ; jmp 0x401020
0x0000000000401169 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x0000000000401077 : add al, 0 ; add byte ptr [rax], al ; jmp 0x401020
0x0000000000401057 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x401020
0x000000000040119b : add bh, bh ; loopne 0x401205 ; nop ; ret
0x0000000000401037 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x401020
0x00000000004015fd : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x0000000000401218 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; jmp 0x4011b0
0x00000000004015fe : add byte ptr [rax], al ; add cl, cl ; ret
0x0000000000401168 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x0000000000401039 : add byte ptr [rax], al ; jmp 0x401020
0x000000000040145d : add byte ptr [rax], al ; jmp 0x401519
0x00000000004015ff : add byte ptr [rax], al ; leave ; ret
0x000000000040121a : add byte ptr [rax], al ; nop dword ptr [rax] ; jmp 0x4011b0
0x0000000000401034 : add byte ptr [rax], al ; push 0 ; jmp 0x401020
0x0000000000401134 : add byte ptr [rax], al ; push 0x10 ; jmp 0x401020
0x00000000004010d4 : add byte ptr [rax], al ; push 0xa ; jmp 0x401020
0x00000000004010e4 : add byte ptr [rax], al ; push 0xb ; jmp 0x401020
0x00000000004010f4 : add byte ptr [rax], al ; push 0xc ; jmp 0x401020
0x0000000000401104 : add byte ptr [rax], al ; push 0xd ; jmp 0x401020
0x0000000000401114 : add byte ptr [rax], al ; push 0xe ; jmp 0x401020
0x0000000000401124 : add byte ptr [rax], al ; push 0xf ; jmp 0x401020
0x0000000000401044 : add byte ptr [rax], al ; push 1 ; jmp 0x401020
0x0000000000401054 : add byte ptr [rax], al ; push 2 ; jmp 0x401020
0x0000000000401064 : add byte ptr [rax], al ; push 3 ; jmp 0x401020
0x0000000000401074 : add byte ptr [rax], al ; push 4 ; jmp 0x401020
0x0000000000401084 : add byte ptr [rax], al ; push 5 ; jmp 0x401020
0x0000000000401094 : add byte ptr [rax], al ; push 6 ; jmp 0x401020
0x00000000004010a4 : add byte ptr [rax], al ; push 7 ; jmp 0x401020
0x00000000004010b4 : add byte ptr [rax], al ; push 8 ; jmp 0x401020
0x00000000004010c4 : add byte ptr [rax], al ; push 9 ; jmp 0x401020
0x000000000040116e : add byte ptr [rax], al ; ret
0x0000000000401009 : add byte ptr [rax], al ; test rax, rax ; je 0x401012 ; call rax
0x000000000040116d : add byte ptr [rax], r8b ; ret
0x0000000000401207 : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000401167 : add byte ptr cs:[rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x0000000000401133 : add byte ptr cs:[rax], al ; push 0x10 ; jmp 0x401020
0x00000000004010d3 : add byte ptr cs:[rax], al ; push 0xa ; jmp 0x401020
0x00000000004010e3 : add byte ptr cs:[rax], al ; push 0xb ; jmp 0x401020
0x00000000004010f3 : add byte ptr cs:[rax], al ; push 0xc ; jmp 0x401020
0x0000000000401103 : add byte ptr cs:[rax], al ; push 0xd ; jmp 0x401020
0x0000000000401113 : add byte ptr cs:[rax], al ; push 0xe ; jmp 0x401020
0x0000000000401123 : add byte ptr cs:[rax], al ; push 0xf ; jmp 0x401020
0x00000000004010a3 : add byte ptr cs:[rax], al ; push 7 ; jmp 0x401020
0x00000000004010b3 : add byte ptr cs:[rax], al ; push 8 ; jmp 0x401020
0x00000000004010c3 : add byte ptr cs:[rax], al ; push 9 ; jmp 0x401020
0x0000000000401092 : add ch, byte ptr [rdi] ; add byte ptr [rax], al ; push 6 ; jmp 0x401020
0x0000000000401600 : add cl, cl ; ret
0x000000000040119a : add dil, dil ; loopne 0x401205 ; nop ; ret
0x0000000000401047 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x401020
0x000000000040145b : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x401519
0x0000000000401208 : add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax + rax] ; ret
0x0000000000401067 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x401020
0x0000000000401013 : add esp, 8 ; ret
0x0000000000401012 : add rsp, 8 ; ret
0x0000000000401052 : and ch, byte ptr [rdi] ; add byte ptr [rax], al ; push 2 ; jmp 0x401020
0x0000000000401251 : call qword ptr [rax + 0x4855c35d]
0x0000000000401321 : call qword ptr [rax + 0x4855c3c9]
0x0000000000401010 : call rax
0x000000000040145a : clc ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x401519
0x00000000004010a2 : cli ; add byte ptr cs:[rax], al ; push 7 ; jmp 0x401020
0x0000000000401456 : dec dword ptr [rax - 0x39] ; clc ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x401519
0x0000000000401378 : dec ecx ; ret
0x0000000000401654 : fisttp word ptr [rax - 0x7d] ; ret
0x00000000004010e2 : fisubr dword ptr [rsi] ; add byte ptr [rax], al ; push 0xb ; jmp 0x401020
0x000000000040116a : hlt ; nop dword ptr [rax + rax] ; ret
0x0000000000401636 : in al, dx ; or al, ch ; ret
0x000000000040100e : je 0x401012 ; call rax
0x0000000000401195 : je 0x4011a0 ; mov edi, 0x404010 ; jmp rax
0x00000000004011d7 : je 0x4011e0 ; mov edi, 0x404010 ; jmp rax
0x000000000040103b : jmp 0x401020
0x0000000000401220 : jmp 0x4011b0
0x000000000040148a : jmp 0x4014d3
0x000000000040145f : jmp 0x401519
0x000000000040119c : jmp rax
0x0000000000401323 : leave ; ret
0x00000000004010d2 : loop 0x401102 ; add byte ptr [rax], al ; push 0xa ; jmp 0x401020
0x000000000040119d : loopne 0x401205 ; nop ; ret
0x0000000000401202 : mov byte ptr [rip + 0x2e1f], 1 ; pop rbp ; ret
0x0000000000401132 : mov dl, 0x2e ; add byte ptr [rax], al ; push 0x10 ; jmp 0x401020
0x0000000000401458 : mov dword ptr [rbp - 8], 1 ; jmp 0x401519
0x00000000004015fc : mov eax, 0 ; leave ; ret
0x0000000000401197 : mov edi, 0x404010 ; jmp rax
0x0000000000401457 : mov qword ptr [rbp - 8], 1 ; jmp 0x401519
0x0000000000401322 : nop ; leave ; ret
0x0000000000401252 : nop ; pop rbp ; ret
0x000000000040119f : nop ; ret
0x000000000040116b : nop dword ptr [rax + rax] ; ret
0x000000000040121c : nop dword ptr [rax] ; jmp 0x4011b0
0x000000000040166d : nop dword ptr [rax] ; ret
0x00000000004010f7 : or al, 0 ; add byte ptr [rax], al ; jmp 0x401020
0x00000000004010d7 : or al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x401020
0x0000000000401637 : or al, ch ; ret
0x00000000004010b7 : or byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x401020
0x0000000000401082 : or ch, byte ptr [rdi] ; add byte ptr [rax], al ; push 5 ; jmp 0x401020
0x00000000004010c7 : or dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x401020
0x0000000000401196 : or dword ptr [rdi + 0x404010], edi ; jmp rax
0x00000000004010e7 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x401020
0x0000000000401664 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401666 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401668 : pop r14 ; pop r15 ; ret
0x000000000040166a : pop r15 ; ret
0x0000000000401663 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401667 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401209 : pop rbp ; ret
0x000000000040166b : pop rdi ; ret
0x0000000000401669 : pop rsi ; pop r15 ; ret
0x0000000000401665 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401036 : push 0 ; jmp 0x401020
0x0000000000401136 : push 0x10 ; jmp 0x401020
0x00000000004010d6 : push 0xa ; jmp 0x401020
0x00000000004010e6 : push 0xb ; jmp 0x401020
0x00000000004010f6 : push 0xc ; jmp 0x401020
0x0000000000401106 : push 0xd ; jmp 0x401020
0x0000000000401116 : push 0xe ; jmp 0x401020
0x0000000000401126 : push 0xf ; jmp 0x401020
0x0000000000401046 : push 1 ; jmp 0x401020
0x0000000000401056 : push 2 ; jmp 0x401020
0x0000000000401066 : push 3 ; jmp 0x401020
0x0000000000401076 : push 4 ; jmp 0x401020
0x0000000000401086 : push 5 ; jmp 0x401020
0x0000000000401096 : push 6 ; jmp 0x401020
0x00000000004010a6 : push 7 ; jmp 0x401020
0x00000000004010b6 : push 8 ; jmp 0x401020
0x00000000004010c6 : push 9 ; jmp 0x401020
0x0000000000401016 : ret
0x0000000000401112 : ret 0x2e
0x0000000000401102 : retf 0x2e
0x00000000004014fd : retf 0x8548
0x000000000040100d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x0000000000401062 : sbb ch, byte ptr [rdi] ; add byte ptr [rax], al ; push 3 ; jmp 0x401020
0x00000000004010f2 : shr byte ptr [rsi], cl ; add byte ptr [rax], al ; push 0xc ; jmp 0x401020
0x0000000000401042 : sub ch, byte ptr [rdi] ; add byte ptr [rax], al ; push 1 ; jmp 0x401020
0x0000000000401675 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000401674 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040100c : test eax, eax ; je 0x401012 ; call rax
0x0000000000401193 : test eax, eax ; je 0x4011a0 ; mov edi, 0x404010 ; jmp rax
0x00000000004011d5 : test eax, eax ; je 0x4011e0 ; mov edi, 0x404010 ; jmp rax
0x000000000040100b : test rax, rax ; je 0x401012 ; call rax
0x0000000000401032 : xor ch, byte ptr [rdi] ; add byte ptr [rax], al ; push 0 ; jmp 0x401020

Unique gadgets found: 142
========================
gdb -nx -q -batch -ex "info functions" ./labyrinth
========================
All defined functions:

Non-debugging symbols:
0x0000000000401000  _init
0x0000000000401030  putchar@plt
0x0000000000401040  strncmp@plt
0x0000000000401050  puts@plt
0x0000000000401060  printf@plt
0x0000000000401070  alarm@plt
0x0000000000401080  close@plt
0x0000000000401090  fputc@plt
0x00000000004010a0  read@plt
0x00000000004010b0  fgets@plt
0x00000000004010c0  fprintf@plt
0x00000000004010d0  malloc@plt
0x00000000004010e0  setvbuf@plt
0x00000000004010f0  open@plt
0x0000000000401100  perror@plt
0x0000000000401110  strtoul@plt
0x0000000000401120  exit@plt
0x0000000000401130  fwrite@plt
0x0000000000401140  _start
0x0000000000401170  _dl_relocate_static_pie
0x0000000000401180  deregister_tm_clones
0x00000000004011b0  register_tm_clones
0x00000000004011f0  __do_global_dtors_aux
0x0000000000401220  frame_dummy
0x0000000000401222  cls
0x0000000000401255  escape_plan
0x0000000000401325  read_num
0x000000000040137b  banner
0x00000000004013ae  setup
0x0000000000401405  main
0x0000000000401610  __libc_csu_init
0x0000000000401670  __libc_csu_fini
0x0000000000401674  _fini
