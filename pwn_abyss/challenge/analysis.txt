========================
checksec --file=./abyss --output=json
========================
{
    "./abyss": {
        "relro": "partial",
        "canary": "no",
        "nx": "yes",
        "pie": "no",
        "rpath": "no",
        "runpath": "no",
        "symbols": "yes",
        "fortify_source": "no",
        "fortified": "0",
        "fortify-able": "3"
    }
}========================
ROPgadget --binary ./abyss
========================
Gadgets information
============================================================
0x00000000004017c7 : adc al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x4017de
0x00000000004011dd : add ah, dh ; nop ; endbr64 ; ret
0x00000000004014a2 : add al, 0x90 ; jmp 0x4014a7
0x00000000004017d5 : add al, ch ; xor eax, 0x90fffff9 ; jmp 0x401775
0x000000000040120b : add bh, bh ; loopne 0x401275 ; nop ; ret
0x000000000040184c : add byte ptr [rax], al ; add byte ptr [rax], al ; endbr64 ; ret
0x00000000004017c9 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x4017de
0x0000000000401036 : add byte ptr [rax], al ; add dl, dh ; jmp 0x401020
0x000000000040127a : add byte ptr [rax], al ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x000000000040184e : add byte ptr [rax], al ; endbr64 ; ret
0x00000000004011dc : add byte ptr [rax], al ; hlt ; nop ; endbr64 ; ret
0x0000000000401362 : add byte ptr [rax], al ; jmp 0x401387
0x000000000040140b : add byte ptr [rax], al ; jmp 0x401430
0x0000000000401794 : add byte ptr [rax], al ; jmp 0x4017de
0x000000000040135b : add byte ptr [rax], al ; mov dword ptr [rbp - 4], 5 ; jmp 0x401387
0x0000000000401404 : add byte ptr [rax], al ; mov dword ptr [rbp - 4], 5 ; jmp 0x401430
0x000000000040100d : add byte ptr [rax], al ; test rax, rax ; je 0x401016 ; call rax
0x000000000040127b : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000401279 : add byte ptr cs:[rax], al ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004011db : add byte ptr cs:[rax], al ; hlt ; nop ; endbr64 ; ret
0x000000000040120a : add dil, dil ; loopne 0x401275 ; nop ; ret
0x0000000000401038 : add dl, dh ; jmp 0x401020
0x0000000000401792 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4017de
0x000000000040127c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000401277 : add eax, 0x2e23 ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000401707 : add eax, 0xb8fffffa ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x4017de
0x0000000000401085 : add eax, 0xf2000000 ; jmp 0x401020
0x0000000000401017 : add esp, 8 ; ret
0x0000000000401016 : add rsp, 8 ; ret
0x0000000000401278 : and ebp, dword ptr [rsi] ; add byte ptr [rax], al ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004017da : call qword ptr [rax - 0x3c366815]
0x000000000040103e : call qword ptr [rax - 0x5e1f00d]
0x0000000000401014 : call rax
0x0000000000401293 : cli ; jmp 0x401220
0x00000000004011e3 : cli ; ret
0x000000000040185b : cli ; sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004017a9 : cmp eax, 1 ; je 0x4017bc ; jmp 0x4017cf
0x0000000000401290 : endbr64 ; jmp 0x401220
0x00000000004011e0 : endbr64 ; ret
0x000000000040182c : fisttp word ptr [rax - 0x7d] ; ret
0x00000000004011de : hlt ; nop ; endbr64 ; ret
0x0000000000401012 : je 0x401016 ; call rax
0x0000000000401205 : je 0x401210 ; mov edi, 0x404088 ; jmp rax
0x0000000000401247 : je 0x401250 ; mov edi, 0x404088 ; jmp rax
0x000000000040178f : je 0x401798 ; mov eax, 1 ; jmp 0x4017de
0x00000000004017a7 : je 0x4017b0 ; cmp eax, 1 ; je 0x4017bc ; jmp 0x4017cf
0x00000000004017ac : je 0x4017bc ; jmp 0x4017cf
0x000000000040103a : jmp 0x401020
0x0000000000401294 : jmp 0x401220
0x0000000000401364 : jmp 0x401387
0x000000000040140d : jmp 0x401430
0x000000000040149b : jmp 0x4014a7
0x0000000000401550 : jmp 0x4015b3
0x00000000004017dc : jmp 0x401775
0x00000000004017ae : jmp 0x4017cf
0x00000000004017ba : jmp 0x4017dc
0x0000000000401796 : jmp 0x4017de
0x000000000040100b : jmp 0x4840103f
0x000000000040120c : jmp rax
0x00000000004014a7 : leave ; ret
0x000000000040120d : loopne 0x401275 ; nop ; ret
0x0000000000401208 : mov byte ptr [rax + 0x40], al ; add bh, bh ; loopne 0x401275 ; nop ; ret
0x0000000000401276 : mov byte ptr [rip + 0x2e23], 1 ; pop rbp ; ret
0x000000000040135d : mov dword ptr [rbp - 4], 5 ; jmp 0x401387
0x0000000000401406 : mov dword ptr [rbp - 4], 5 ; jmp 0x401430
0x00000000004017c8 : mov eax, 0 ; jmp 0x4017de
0x0000000000401791 : mov eax, 1 ; jmp 0x4017de
0x0000000000401207 : mov edi, 0x404088 ; jmp rax
0x00000000004011df : nop ; endbr64 ; ret
0x000000000040149d : nop ; jmp 0x4014a7
0x00000000004017db : nop ; jmp 0x401775
0x00000000004014a6 : nop ; leave ; ret
0x000000000040120f : nop ; ret
0x000000000040128c : nop dword ptr [rax] ; endbr64 ; jmp 0x401220
0x00000000004017d3 : or byte ptr [rax], al ; add al, ch ; xor eax, 0x90fffff9 ; jmp 0x401775
0x000000000040149c : or dl, byte ptr [rax - 0x146ff815] ; add al, 0x90 ; jmp 0x4014a7
0x0000000000401206 : or dword ptr [rdi + 0x404088], edi ; jmp rax
0x000000000040183c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040183e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401840 : pop r14 ; pop r15 ; ret
0x0000000000401842 : pop r15 ; ret
0x000000000040183b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040183f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040127d : pop rbp ; ret
0x0000000000401843 : pop rdi ; ret
0x0000000000401841 : pop rsi ; pop r15 ; ret
0x000000000040183d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040101a : ret
0x00000000004016f5 : ret 0x8948
0x0000000000401011 : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000040105b : sar edi, 0xff ; call qword ptr [rax - 0x5e1f00d]
0x000000000040185d : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040185c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000401010 : test eax, eax ; je 0x401016 ; call rax
0x0000000000401203 : test eax, eax ; je 0x401210 ; mov edi, 0x404088 ; jmp rax
0x0000000000401245 : test eax, eax ; je 0x401250 ; mov edi, 0x404088 ; jmp rax
0x00000000004017a5 : test eax, eax ; je 0x4017b0 ; cmp eax, 1 ; je 0x4017bc ; jmp 0x4017cf
0x000000000040100f : test rax, rax ; je 0x401016 ; call rax
0x00000000004017dd : xchg edi, eax ; leave ; ret
0x00000000004017d7 : xor eax, 0x90fffff9 ; jmp 0x401775

Unique gadgets found: 100
========================
gdb -nx -q -batch -ex "info functions" ./abyss
========================
All defined functions:

Non-debugging symbols:
0x0000000000401000  _init
0x00000000004010f0  strncmp@plt
0x0000000000401100  strcpy@plt
0x0000000000401110  puts@plt
0x0000000000401120  write@plt
0x0000000000401130  strlen@plt
0x0000000000401140  strchr@plt
0x0000000000401150  memset@plt
0x0000000000401160  close@plt
0x0000000000401170  read@plt
0x0000000000401180  strcmp@plt
0x0000000000401190  open@plt
0x00000000004011a0  perror@plt
0x00000000004011b0  _start
0x00000000004011e0  _dl_relocate_static_pie
0x00000000004011f0  deregister_tm_clones
0x0000000000401220  register_tm_clones
0x0000000000401260  __do_global_dtors_aux
0x0000000000401290  frame_dummy
0x0000000000401296  cmd_login
0x00000000004014a9  cmd_read
0x00000000004015b5  main
0x00000000004017e0  __libc_csu_init
0x0000000000401850  __libc_csu_fini
0x0000000000401858  _fini
