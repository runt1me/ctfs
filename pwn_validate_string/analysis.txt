========================
checksec --file=./ctfs/pwn_validate_string/validate_string --output=json
========================
{
    "./ctfs/pwn_validate_string/validate_string": {
        "relro": "partial",
        "canary": "no",
        "nx": "yes",
        "pie": "no",
        "rpath": "no",
        "runpath": "no",
        "symbols": "yes",
        "fortify_source": "no",
        "fortified": "0",
        "fortify-able": "4"
    }
}========================
ROPgadget --binary ./ctfs/pwn_validate_string/validate_string
========================
Gadgets information
============================================================
0x080492f4 : aas ; loopne 0x80492f6 ; call dword ptr [eax + 0x6a]
0x0804914a : adc al, 0x68 ; xor al, 0xc0 ; add al, 8 ; call eax
0x08049082 : adc al, 0xc0 ; add al, 8 ; push 0x28 ; jmp 0x8049020
0x08049072 : adc al, al ; add al, 8 ; push 0x20 ; jmp 0x8049020
0x08049196 : adc byte ptr [eax + 0x68], dl ; xor al, 0xc0 ; add al, 8 ; call edx
0x08049398 : adc byte ptr [eax + 1], bh ; jmp 0x80493cb
0x0804921f : adc byte ptr [eax - 0x3603a275], dl ; ret
0x08049057 : adc byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020
0x080493b3 : adc byte ptr [ebx - 0x7c72f314], al ; insb byte ptr es:[edi], dx ; loopne 0x80493bb ; call dword ptr [eax - 0x18]
0x08049154 : adc cl, cl ; ret
0x08049212 : adc dword ptr [eax], -1 ; call dword ptr [eax - 0x18]
0x0804938b : adc dword ptr [ebp - 0x20], -1 ; call dword ptr [eax - 0x18]
0x0804933c : adc dword ptr [ebx - 0x20], -1 ; call dword ptr [eax + 0x6a]
0x080492f1 : adc ecx, dword ptr [ebp - 0x1fc07d] ; call dword ptr [eax + 0x6a]
0x080492ef : add al, 0x6a ; adc ecx, dword ptr [ebp - 0x1fc07d] ; call dword ptr [eax + 0x6a]
0x08049338 : add al, 0x6a ; add dword ptr [ebp - 0x1fac7d], ecx ; call dword ptr [eax + 0x6a]
0x08049042 : add al, 0xc0 ; add al, 8 ; push 8 ; jmp 0x8049020
0x080491cc : add al, 8 ; add ecx, ecx ; ret
0x0804914e : add al, 8 ; call eax
0x0804919b : add al, 8 ; call edx
0x08049034 : add al, 8 ; push 0 ; jmp 0x8049020
0x08049054 : add al, 8 ; push 0x10 ; jmp 0x8049020
0x08049064 : add al, 8 ; push 0x18 ; jmp 0x8049020
0x08049074 : add al, 8 ; push 0x20 ; jmp 0x8049020
0x08049084 : add al, 8 ; push 0x28 ; jmp 0x8049020
0x08049094 : add al, 8 ; push 0x30 ; jmp 0x8049020
0x080490a4 : add al, 8 ; push 0x38 ; jmp 0x8049020
0x080490b4 : add al, 8 ; push 0x40 ; jmp 0x8049020
0x080490c4 : add al, 8 ; push 0x48 ; jmp 0x8049020
0x080490d4 : add al, 8 ; push 0x50 ; jmp 0x8049020
0x08049044 : add al, 8 ; push 8 ; jmp 0x8049020
0x08049032 : add al, al ; add al, 8 ; push 0 ; jmp 0x8049020
0x080492be : add byte ptr [eax - 0x18], dl ; jmp 0x80492c0
0x080491dc : add byte ptr [eax], al ; add byte ptr [eax], al ; endbr32 ; jmp 0x8049170
0x08049037 : add byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020
0x0804915a : add byte ptr [eax], al ; add byte ptr [eax], al ; nop ; ret
0x080491d4 : add byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x0804915b : add byte ptr [eax], al ; add byte ptr [esi - 0x70], ah ; ret
0x080493e5 : add byte ptr [eax], al ; add esp, 8 ; pop ebx ; ret
0x080491de : add byte ptr [eax], al ; endbr32 ; jmp 0x8049170
0x08049039 : add byte ptr [eax], al ; jmp 0x8049020
0x0804939c : add byte ptr [eax], al ; jmp 0x80493cb
0x0804915c : add byte ptr [eax], al ; nop ; ret
0x080491d6 : add byte ptr [eax], al ; ret
0x0804915d : add byte ptr [esi - 0x70], ah ; ret
0x080491db : add byte ptr es:[eax], al ; add byte ptr [eax], al ; endbr32 ; jmp 0x8049170
0x08049159 : add byte ptr es:[eax], al ; add byte ptr [eax], al ; nop ; ret
0x080491d3 : add byte ptr es:[eax], al ; add byte ptr [eax], al ; ret
0x0804939a : add dword ptr [eax], eax ; add byte ptr [eax], al ; jmp 0x80493cb
0x0804933a : add dword ptr [ebp - 0x1fac7d], ecx ; call dword ptr [eax + 0x6a]
0x080491c9 : add eax, 0x804c034 ; add ecx, ecx ; ret
0x080491ce : add ecx, ecx ; ret
0x08049300 : add esp, 0x10 ; jmp 0x8049319
0x08049152 : add esp, 0x10 ; leave ; ret
0x08049396 : add esp, 0x10 ; mov eax, 1 ; jmp 0x80493cb
0x0804921d : add esp, 0x10 ; nop ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x0804901b : add esp, 8 ; pop ebx ; ret
0x080490c2 : and al, 0xc0 ; add al, 8 ; push 0x48 ; jmp 0x8049020
0x0804910b : and al, 0xc3 ; nop ; nop ; ret
0x080490b2 : and al, al ; add al, 8 ; push 0x40 ; jmp 0x8049020
0x08049077 : and byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020
0x080492f7 : call dword ptr [eax + 0x6a]
0x08049216 : call dword ptr [eax - 0x18]
0x08049019 : call eax
0x0804919d : call edx
0x080493cd : clc ; pop ecx ; pop ebx ; pop ebp ; lea esp, [ecx - 4] ; ret
0x08049223 : cld ; leave ; ret
0x080493d3 : cld ; ret
0x080490a7 : cmp byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020
0x080491e0 : endbr32 ; jmp 0x8049170
0x08049108 : hlt ; mov ebx, dword ptr [esp] ; ret
0x08049149 : in al, dx ; adc al, 0x68 ; xor al, 0xc0 ; add al, 8 ; call eax
0x08049195 : in al, dx ; adc byte ptr [eax + 0x68], dl ; xor al, 0xc0 ; add al, 8 ; call edx
0x080492ee : in al, dx ; add al, 0x6a ; adc ecx, dword ptr [ebp - 0x1fc07d] ; call dword ptr [eax + 0x6a]
0x08049337 : in al, dx ; add al, 0x6a ; add dword ptr [ebp - 0x1fac7d], ecx ; call dword ptr [eax + 0x6a]
0x08049387 : in al, dx ; or byte ptr [eax - 0x73], dl ; adc dword ptr [ebp - 0x20], -1 ; call dword ptr [eax - 0x18]
0x08049147 : in eax, 0x83 ; in al, dx ; adc al, 0x68 ; xor al, 0xc0 ; add al, 8 ; call eax
0x0804921c : inc dword ptr [ebx - 0x746fef3c] ; pop ebp ; cld ; leave ; ret
0x0804920e : inc ebp ; mov eax, 0x14838d50 ; loopne 0x8049215 ; call dword ptr [eax - 0x18]
0x080491c7 : inc esi ; add eax, 0x804c034 ; add ecx, ecx ; ret
0x080493b9 : insb byte ptr es:[edi], dx ; loopne 0x80493bb ; call dword ptr [eax - 0x18]
0x08049335 : iretd
0x08049017 : je 0x804901b ; call eax
0x0804903b : jmp 0x8049020
0x0804900b : jmp 0x804903c
0x080491e4 : jmp 0x8049170
0x080492c1 : jmp 0x80492c0
0x08049303 : jmp 0x8049319
0x0804939e : jmp 0x80493cb
0x08049157 : lea esi, [esi] ; nop ; ret
0x080491a4 : lea esi, [esi] ; ret
0x080493cb : lea esp, [ebp - 8] ; pop ecx ; pop ebx ; pop ebp ; lea esp, [ecx - 4] ; ret
0x080493d1 : lea esp, [ecx - 4] ; ret
0x08049155 : leave ; ret
0x0804901c : les ecx, ptr [eax] ; pop ebx ; ret
0x08049301 : les edx, ptr [eax] ; jmp 0x8049319
0x08049153 : les edx, ptr [eax] ; leave ; ret
0x08049397 : les edx, ptr [eax] ; mov eax, 1 ; jmp 0x80493cb
0x0804921e : les edx, ptr [eax] ; nop ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x08049214 : loopne 0x8049215 ; call dword ptr [eax - 0x18]
0x080492d7 : loopne 0x80492d8 ; call dword ptr [eax - 0x18]
0x080492f5 : loopne 0x80492f6 ; call dword ptr [eax + 0x6a]
0x0804933e : loopne 0x804933f ; call dword ptr [eax + 0x6a]
0x0804938d : loopne 0x804938e ; call dword ptr [eax - 0x18]
0x080493ba : loopne 0x80493bb ; call dword ptr [eax - 0x18]
0x08049158 : mov ah, 0x26 ; add byte ptr [eax], al ; add byte ptr [eax], al ; nop ; ret
0x080491d2 : mov ah, 0x26 ; add byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x080491c8 : mov byte ptr [0x804c034], 1 ; leave ; ret
0x0804920f : mov eax, 0x14838d50 ; loopne 0x8049215 ; call dword ptr [eax - 0x18]
0x08049399 : mov eax, 1 ; jmp 0x80493cb
0x08049221 : mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x08049109 : mov ebx, dword ptr [esp] ; ret
0x08049220 : nop ; mov ebx, dword ptr [ebp - 4] ; leave ; ret
0x0804911f : nop ; mov ebx, dword ptr [esp] ; ret
0x0804911e : nop ; nop ; mov ebx, dword ptr [esp] ; ret
0x0804911c : nop ; nop ; nop ; mov ebx, dword ptr [esp] ; ret
0x0804911a : nop ; nop ; nop ; nop ; mov ebx, dword ptr [esp] ; ret
0x0804910e : nop ; nop ; ret
0x0804910f : nop ; ret
0x08049062 : or al, 0xc0 ; add al, 8 ; push 0x18 ; jmp 0x8049020
0x08049052 : or al, al ; add al, 8 ; push 0x10 ; jmp 0x8049020
0x08049388 : or byte ptr [eax - 0x73], dl ; adc dword ptr [ebp - 0x20], -1 ; call dword ptr [eax - 0x18]
0x08049047 : or byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020
0x080491cd : or byte ptr [ecx], al ; leave ; ret
0x08049222 : pop ebp ; cld ; leave ; ret
0x080493d0 : pop ebp ; lea esp, [ecx - 4] ; ret
0x080493cf : pop ebx ; pop ebp ; lea esp, [ecx - 4] ; ret
0x0804901e : pop ebx ; ret
0x080493ce : pop ecx ; pop ebx ; pop ebp ; lea esp, [ecx - 4] ; ret
0x080493d2 : popal ; cld ; ret
0x08049036 : push 0 ; jmp 0x8049020
0x08049056 : push 0x10 ; jmp 0x8049020
0x08049066 : push 0x18 ; jmp 0x8049020
0x08049076 : push 0x20 ; jmp 0x8049020
0x08049086 : push 0x28 ; jmp 0x8049020
0x08049096 : push 0x30 ; jmp 0x8049020
0x080490a6 : push 0x38 ; jmp 0x8049020
0x080490b6 : push 0x40 ; jmp 0x8049020
0x080490c6 : push 0x48 ; jmp 0x8049020
0x080490d6 : push 0x50 ; jmp 0x8049020
0x0804914b : push 0x804c034 ; call eax
0x08049198 : push 0x804c034 ; call edx
0x08049046 : push 8 ; jmp 0x8049020
0x080491e2 : push ds ; sti ; jmp 0x8049170
0x08049197 : push eax ; push 0x804c034 ; call edx
0x0804938c : push ebp ; loopne 0x804938e ; call dword ptr [eax - 0x18]
0x0804933d : push ebx ; loopne 0x804933f ; call dword ptr [eax + 0x6a]
0x08049107 : push esp ; mov ebx, dword ptr [esp] ; ret
0x0804900a : ret
0x08049234 : ret 0x2d
0x0804917b : ret 0xe8c1
0x08049053 : rol byte ptr [eax + ecx], 0x68 ; adc byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020
0x08049033 : rol byte ptr [eax + ecx], 0x68 ; add byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020
0x08049073 : rol byte ptr [eax + ecx], 0x68 ; and byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020
0x080490a3 : rol byte ptr [eax + ecx], 0x68 ; cmp byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020
0x08049043 : rol byte ptr [eax + ecx], 0x68 ; or byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020
0x08049063 : rol byte ptr [eax + ecx], 0x68 ; sbb byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020
0x08049083 : rol byte ptr [eax + ecx], 0x68 ; sub byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020
0x08049093 : rol byte ptr [eax + ecx], 0x68 ; xor byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020
0x08049177 : rol byte ptr [eax + ecx], 0x89 ; ret 0xe8c1
0x080491cb : rol byte ptr [eax + ecx], 1 ; leave ; ret
0x08049016 : sal byte ptr [edx + eax - 1], 0xd0 ; add esp, 8 ; pop ebx ; ret
0x0804910a : sbb al, 0x24 ; ret
0x080490a2 : sbb al, 0xc0 ; add al, 8 ; push 0x38 ; jmp 0x8049020
0x08049092 : sbb al, al ; add al, 8 ; push 0x30 ; jmp 0x8049020
0x08049067 : sbb byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020
0x080491e3 : sti ; jmp 0x8049170
0x080490d2 : sub al, al ; add al, 8 ; push 0x50 ; jmp 0x8049020
0x08049087 : sub byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020
0x08049194 : sub esp, 0x10 ; push eax ; push 0x804c034 ; call edx
0x08049148 : sub esp, 0x14 ; push 0x804c034 ; call eax
0x08049015 : test eax, eax ; je 0x804901b ; call eax
0x080491ca : xor al, 0xc0 ; add al, 8 ; add ecx, ecx ; ret
0x0804914c : xor al, 0xc0 ; add al, 8 ; call eax
0x08049199 : xor al, 0xc0 ; add al, 8 ; call edx
0x08049097 : xor byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x8049020

Unique gadgets found: 176
========================
gdb -nx -q -batch -ex "info functions" ./ctfs/pwn_validate_string/validate_string
========================
All defined functions:

Non-debugging symbols:
0x08049000  _init
0x08049030  __libc_start_main@plt
0x08049040  read@plt
0x08049050  printf@plt
0x08049060  perror@plt
0x08049070  strcat@plt
0x08049080  strcpy@plt
0x08049090  puts@plt
0x080490a0  exit@plt
0x080490b0  open@plt
0x080490c0  write@plt
0x080490d0  close@plt
0x080490e0  _start
0x08049110  _dl_relocate_static_pie
0x08049120  __x86.get_pc_thunk.bx
0x08049130  deregister_tm_clones
0x08049170  register_tm_clones
0x080491b0  __do_global_dtors_aux
0x080491e0  frame_dummy
0x080491e6  respond
0x08049226  dump_key
0x08049360  main
0x080493d8  _fini
